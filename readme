# Enigma Project

A Raspberry Pi Pico-based implementation of the classic Enigma cipher machine. This project uses the Pico SDK and related libraries to emulate the encryption and decryption process of the historical Enigma device, demonstrating embedded programming, hardware interfacing, and cryptography concepts.

## Project Structure

This project is organized into several directories and files, each serving a specific purpose:

- **.vscode**  
  Contains Visual Studio Code workspace settings and cache files to configure the editor environment for this project.

- **Enigma2.0**  
  Holds the main source code files, including all C source (`.c`) and header (`.h`) files responsible for implementing the Enigma cipher logic and user interface.

- **Resources**  
  Includes supplementary materials such as documentation, diagrams, notes, or reference files that were used throughout the development process.

- **Build**  
  Contains build artifacts generated by CMake during the compilation process, such as object files and final binaries. This folder is automatically created during build and usually excluded from version control.

- **pico-sdk**  
  The official Raspberry Pi Pico Software Development Kit repository, providing all necessary libraries and headers (like `#include <pico/stdlib.h>`) to build and run the project on the RP2040 microcontroller.

- **CMakeLists.txt**  
  The main CMake build configuration file that defines build instructions, source files, compiler options, and links the Pico SDK for firmware compilation.

- **flash.sh**  
  A convenient shell script to automate the build and flash process. It cleans previous builds, compiles the firmware, and flashes the binary onto the Pico board, streamlining development and testing.
